--- src/Terraria/ReLogic/Content/Readers/PngReader.cs
+++ src/Terraclient/ReLogic/Content/Readers/PngReader.cs
@@ -40,12 +_,27 @@
 			texture2D.SetData(value, 0, num);
 			return texture2D as T;
 #else
+			// tML code:
-			var img = Image.Load(stream);
+			/*var img = Image.Load(stream);
 			Image<Rgba32> bmp = img.CloneAs<Rgba32>();
 			bmp.TryGetSinglePixelSpan(out Span<Rgba32> colors);
 
 			Texture2D texture2D = new Texture2D(_graphicsDevice, bmp.Width, bmp.Height);
-			texture2D.SetData(colors.ToArray());
+			texture2D.SetData(colors.ToArray());*/
+
+			// Terraclient:
+			Texture2D texture2D = Texture2D.FromStream(_graphicsDevice, stream);
+			int num = texture2D.Width * texture2D.Height;
+			if (!_colorProcessingCache.IsValueCreated || _colorProcessingCache.Value.Length < num)
+				_colorProcessingCache.Value = new Color[num];
+
+			Color[] value = _colorProcessingCache.Value;
+			texture2D.GetData(value, 0, num);
+			for (int i = 0; i != num; i++) {
+				value[i] = Color.FromNonPremultiplied(value[i].ToVector4());
+			}
+
+			texture2D.SetData(value, 0, num);
 			return texture2D as T;
 #endif
 		}
