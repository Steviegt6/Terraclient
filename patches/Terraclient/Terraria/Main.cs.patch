--- src/Terraria/Terraria/Main.cs
+++ src/Terraclient/Terraria/Main.cs
@@ -71,6 +_,11 @@
 using Terraria.Net;
 using Terraria.ObjectData;
 using Terraria.Social;
+using Terraria.Terraclient;
+using Terraria.Terraclient.Cheats;
+using Terraria.Terraclient.Cheats.General;
+using Terraria.Terraclient.Commands;
+using Terraria.Terraclient.GameContent.UI.States;
 using Terraria.UI;
 using Terraria.UI.Chat;
 using Terraria.UI.Gamepad;
@@ -83,9 +_,9 @@
 namespace Terraria
 {
 #if SERVER
-	public class Main : Terraria.Server.Game
+	public partial class Main : Terraria.Server.Game
 #else
-	public class Main : Game
+	public partial class Main : Game
 #endif
 	{
 		public delegate void OnPlayerSelected(PlayerFileData player);
@@ -241,7 +_,7 @@
 		public static NPCHeadRenderer BossNPCHeadRenderer = null;
 		public static string versionNumber = "v1.4.2.2";
 		public static string versionNumber2 = "v1.4.2.2";
-		public static string SavePath = Program.LaunchParameters.ContainsKey("-savedirectory") ? Program.LaunchParameters["-savedirectory"] : Platform.Get<IPathService>().GetStoragePath("Terraria");
+		public static string SavePath = (Program.LaunchParameters.ContainsKey("-savedirectory") ? Program.LaunchParameters["-savedirectory"] : Platform.Get<IPathService>().GetStoragePath("Terraria")) + Path.DirectorySeparatorChar + "Terraclient";
 		public static bool AnnouncementBoxDisabled;
 		public static int AnnouncementBoxRange = -1;
 		public static string AutogenSeedName;
@@ -665,7 +_,7 @@
 		public static int DiscoR = 255;
 		public static int DiscoB;
 		public static int DiscoG;
-		public static int teamCooldown;
+		public static int teamCooldown { get => 0; set => value = 0; }
 		public static int teamCooldownLen = 300;
 		public static bool gamePaused;
 		public static bool gameInactive;
@@ -3055,6 +_,8 @@
 
 		public static bool SaveSettings() {
 			Configuration.Clear();
+			foreach (Cheat cheat in CheatHandler.cheats)
+				Configuration.Put(cheat.GetType().Name, cheat.isEnabled);
 			Configuration.Put("ResetDefaultUIScale", false);
 			Configuration.Put("SmartCursorToggle", cSmartCursorModeIsToggleAndNotHold);
 			Configuration.Put("MapEnabled", mapEnabled);
@@ -3171,6 +_,8 @@
 			}
 
 			Configuration.Load();
+			foreach (Cheat cheat in CheatHandler.cheats)
+				Configuration.Get(cheat.GetType().Name, ref cheat.isEnabled);
 			int currentValue = 0;
 			Configuration.Get("LastLaunchedVersion", ref currentValue);
 			bool flag = false;
@@ -4904,14 +_,18 @@
 		}
 
 		private void Initialize_AlmostEverything() {
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.IAE");
 			TilePaintSystem = new TilePaintSystemV2();
 			TilesRenderer = new TileDrawing(TilePaintSystem);
 			WallsRenderer = new WallDrawing(TilePaintSystem);
 			CreativePowerManager.Initialize();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.CloudFiles");
 			LocalFavoriteData.Load();
 			CloudFavoritesData.Load();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Entities");
 			Initialize_Entities();
 			FindAnnouncementBoxStatus();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Classes");
 			CustomCurrencyManager.Initialize();
 			WingStatsInitializer.Load();
 			TileObjectData.Initialize();
@@ -4924,6 +_,7 @@
 			Projectile.InitializeStaticThings();
 			TorchID.Initialize();
 			InitializeItemAnimations();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Bestiary");
 			BestiaryDatabase bestiaryDatabase = new BestiaryDatabase();
 			new BestiaryDatabaseNPCsPopulator().Populate(bestiaryDatabase);
 			BestiaryDB = bestiaryDatabase;
@@ -4935,18 +_,22 @@
 			bestiaryDatabase.Merge(ItemDropsDB);
 			PylonSystem = new TeleportPylonsSystem();
 			ItemDropSolver = new ItemDropResolver(itemDropDatabase);
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.ShopCreative");
 			ShopHelper = new ShopHelper();
 			CreativeItemSacrificesCatalog.Instance.Initialize();
 			if (!dedServ) {
 			BestiaryUI = new UIBestiaryTest(BestiaryDB);
 			ContentThatNeedsRenderTargets.Add(MapPlayerRenderer);
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Lighting");
 			Lighting.Initialize();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Map");
 			MapHelper.Initialize();
 			}
 			else {
 			Mount.Initialize();
 			Minecart.Initialize();
 			}
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.WGBackgrounds");
 			WorldGen.RandomizeBackgrounds(rand);
 			if (treeBGSet1[0] == 173)
 				WorldGen.RandomizeBackgrounds(rand);
@@ -4960,6 +_,7 @@
 			bgAlphaFrontLayer[0] = 1f;
 			bgAlphaFarBackLayer[0] = 1f;
 			invBottom = 258;
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.MajorUhOhs");
 			Initialize_TileAndNPCData1();
 			Initialize_TileAndNPCData2();
 			Initialize_Items();
@@ -4980,6 +_,7 @@
 
 			Recipe.SetupRecipes();
 			ContentSamples.FixItemsAfterRecipesAreAdded();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.FinishingTouches");
 			for (int k = 0; k < Liquid.maxLiquid; k++) {
 				liquid[k] = new Liquid();
 			}
@@ -8238,6 +_,7 @@
 			});
 
 			base.Window.AllowUserResizing = true;
+			CheatHandler.InitializeCheats();
 			LoadSettings();
 			SetDisplayMonitor();
 			if (screenWidth > GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Width)
@@ -8337,6 +_,7 @@
 
 			AssetSourceController.UseResourcePacks(AssetInitializer.CreateResourcePackList(base.Services));
 			AssetInitializer.LoadSplashAssets(asyncLoadForSounds: true);
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Chroma");
 			ChromaInitializer.Load();
 			_gameContentLoadProcess = LoadContent_Deferred();
 		}
@@ -8360,8 +_,10 @@
 		protected IEnumerator LoadContent_Deferred() {
 			yield return null;
 			IssueReporter = new GeneralIssueReporter();
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Assets");
 			AssetInitializer.LoadAssetsWhileInInitialBlackScreen();
 			yield return null;
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Music");
 			bool doneLoadingMusic = false;
 			IEnumerator musicLoadProcedure = LoadMusic_InSteps();
 			while (!doneLoadingMusic) {
@@ -8384,10 +_,12 @@
 			_begunMainAsyncLoad = true;
 			AssetInitializer.Load(asyncLoad: true);
 			_artLoaded = true;
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.RenderTargets");
 			TownNPCHeadRenderer = new NPCHeadRenderer(TextureAssets.NpcHead);
 			ContentThatNeedsRenderTargets.Add(TownNPCHeadRenderer);
 			BossNPCHeadRenderer = new NPCHeadRenderer(TextureAssets.NpcHeadBoss);
 			ContentThatNeedsRenderTargets.Add(BossNPCHeadRenderer);
+			CurrentLoadStage = Language.GetTextValue("LoadCycles.Waiting");
 		}
 
 		private void TickLoadProcess() {
@@ -12626,6 +_,7 @@
 				DoUpdate_HandleInput();
 				DoUpdate_HandleChat();
 				DoUpdate_Enter_ToggleChat();
+				CheatHandler.DoUpdate_Terraclient();
 				if (gameMenu) {
 					UpdateMenu();
 					if (netMode != 2)
@@ -13043,7 +_,7 @@
 			CurrentFrameFlags.SleepingPlayersCount = num2;
 			if (netMode != 2) {
 				int num3 = myPlayer;
-				if (player[num3].creativeGodMode) {
+				if (player[num3].creativeGodMode || CheatHandler.GetCheat<GodModeCheat>().isEnabled) {
 					player[num3].statLife = player[num3].statLifeMax2;
 					player[num3].statMana = player[num3].statManaMax2;
 					player[num3].breath = player[num3].breathMax;
@@ -13401,7 +_,7 @@
 			if (!inputTextEnter || !chatRelease)
 				return;
 
-			if (chatText != "") {
+			if (chatText != "" && !CheatCommandHandler.ParseCheatCommand(chatText)) {
 				ChatMessage message = ChatManager.Commands.CreateOutgoingMessage(chatText);
 				if (netMode == 1)
 					ChatHelper.SendChatMessageFromClient(message);
@@ -13422,6 +_,7 @@
 			UILinkPointNavigator.Update();
 			PlayerInput.CacheMousePositionForZoom();
 			PlayerInput.SetZoom_MouseInWorld();
+			HandleClientInput();
 			oldKeyState = keyState;
 			keyState = Keyboard.GetState();
 		}
@@ -15593,7 +_,7 @@
 				numLines++;
 			}
 
-			if ((item.tooltipContext == 0 || item.tooltipContext == 2 || item.tooltipContext == 1 || item.tooltipContext == 3 || item.tooltipContext == 4 || item.tooltipContext == 15 || item.tooltipContext == 6) && LocalPlayer.difficulty == 3 && CreativeItemSacrificesCatalog.Instance.TryGetSacrificeCountCapToUnlockInfiniteItems(item.type, out int amountNeeded)) {
+			if ((item.tooltipContext == 0 || item.tooltipContext == 2 || item.tooltipContext == 1 || item.tooltipContext == 3 || item.tooltipContext == 4 || item.tooltipContext == 15 || item.tooltipContext == 6) && (LocalPlayer.difficulty == 3 || CheatHandler.GetCheat<JourneyModeCheat>().isEnabled) && CreativeItemSacrificesCatalog.Instance.TryGetSacrificeCountCapToUnlockInfiniteItems(item.type, out int amountNeeded)) {
 				int sacrificeCount = LocalPlayerCreativeTracker.ItemSacrifices.GetSacrificeCount(item.type);
 				if (amountNeeded - sacrificeCount > 0) {
 					toolTipLine[numLines] = Language.GetTextValue("CommonItemTooltip.CreativeSacrificeNeeded", amountNeeded - sacrificeCount);
@@ -29758,6 +_,7 @@
 					list.Add(new TextSnippet("|", Microsoft.Xna.Framework.Color.White));
 
 				array = list.ToArray();
+				ChatManager.DrawColorCodedStringWithShadow(spriteBatch, FontAssets.MouseText.Value, CheatCommandHandler.GetChatOverlayText(), new Vector2(88f, screenHeight - 30), Color.Gray, 0f, Vector2.Zero, Vector2.One);
 				ChatManager.DrawColorCodedStringWithShadow(spriteBatch, FontAssets.MouseText.Value, array, new Vector2(88f, screenHeight - 30), 0f, Vector2.Zero, Vector2.One, out hoveredSnippet);
 				if (hoveredSnippet > -1) {
 					array[hoveredSnippet].OnHover();
@@ -37219,8 +_,8 @@
 				else if (menuMode == 11) {
 					num2 = 210;
 					num4 = 37;
-					num5 = 8;
+					num5 = 9;
-					array4[num5 - 1] = 8;
+					array4[num5 - 1] = 9;
 					for (int num19 = 0; num19 < num5; num19++) {
 						array7[num19] = 0.75f;
 					}
@@ -37268,6 +_,14 @@
 					}
 
 					num20++;
+					array9[num20] = Language.GetTextValue("UI.Cheats");
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						MenuUI.SetState(new UIManageCheats());
+						menuMode = 888;
+					}
+
+					num20++;
 					array9[num20] = Lang.menu[103].Value;
 					if (selectedMenu == num20) {
 						SoundEngine.PlaySound(10);
@@ -39042,6 +_,7 @@
 			}
 
 			if (!WorldGen.drunkWorldGen) {
+				goto SkipVanillaVersionDrawVers;
 				for (int num107 = 0; num107 < 5; num107++) {
 					Microsoft.Xna.Framework.Color color12 = Microsoft.Xna.Framework.Color.Black;
 					if (num107 == 4) {
@@ -39071,6 +_,64 @@
 					origin2.Y *= 0.5f;
 					spriteBatch.DrawString(FontAssets.MouseText.Value, versionNumber, new Vector2(origin2.X + (float)num108 + 10f, (float)screenHeight - origin2.Y + (float)num109 - 2f), color12, 0f, origin2, 1f, SpriteEffects.None, 0f);
 				}
+
+			SkipVanillaVersionDrawVers:
+				Rectangle mouse = new Rectangle(mouseX, mouseY, 1, 1);
+				const float textOffsetY = 28f;
+				Vector2 constBaseOffset = new Vector2(10, 10);
+
+				void HoverableRect(string text, Vector2 pos, Action whileHovering = null, Action whileNotHovering = null) {
+					Vector2 size = FontAssets.MouseText.Value.MeasureString(text);
+
+					if (new Rectangle((int)pos.X, (int)pos.Y, (int)size.X, (int)size.Y).Contains(mouse))
+						whileHovering?.Invoke();
+					else
+						whileNotHovering?.Invoke();
+				}
+
+				void DrawText(string text, Vector2 pos, Color color) =>
+					ChatManager.DrawColorCodedStringWithShadow(spriteBatch, FontAssets.MouseText.Value, text, pos, color, 0f, Vector2.Zero, Vector2.One);
+
+				string versString = $"Terraclient v{CheatHandler.TCVersion}\nTerraria {versionNumber}";
+
+				DrawText(versString, new Vector2(10f, screenHeight - (textOffsetY * 2f)), Color.White);
+
+				string uuidGen = Language.GetTextValue("Cheats.GenerateUUID");
+				Color generateColor = Color.White;
+				HoverableRect(uuidGen, constBaseOffset, () => {
+					                                        generateColor = Color.Goldenrod;
+					                                        if (mouseLeft && mouseLeftRelease)
+						                                        clientUUID = Guid.NewGuid().ToString();
+				                                        });
+
+				DrawText(uuidGen, constBaseOffset, generateColor);
+				DrawText(Language.GetTextValue("Cheats.CurrentUUID", clientUUID), constBaseOffset + new Vector2(0, textOffsetY), Color.Gray);
+				DrawText(Language.GetTextValue("UI.Computing", Environment.Is64BitProcess ? "64bit" : "32bit"), constBaseOffset + new Vector2(0, textOffsetY * 2f), Color.LightGray);
+				DrawText(Language.GetTextValue("UI.RunningFNA"), constBaseOffset + new Vector2(0, textOffsetY * 3f), Color.LightGray);
+
+				string discordText = Language.GetTextValue("UI.Discord");
+				Vector2 discordTextPos = new Vector2(constBaseOffset.X, constBaseOffset.Y + (textOffsetY * 5f));
+				Color discordColor = Colors.RarityBlue;
+
+				Action hoverDiscord = () => {
+					                      discordColor *= 0.75f;
+					                      discordText += " :D";
+
+					                      string discordLink = "https://discord.com/invite/qrZ4Bpz";
+
+										  DrawText($"({discordLink})", constBaseOffset + new Vector2(8f, textOffsetY * 4f) + FontAssets.MouseText.Value.MeasureString(discordText), Color.White);
+
+					                      if (mouseLeft && mouseLeftRelease) {
+						                      ProcessStartInfo info =
+							                      new(discordLink) { UseShellExecute = true, Verb = "open" };
+						                      Process.Start(info);
+					                      }
+				                      };
+
+				Action notHoverDiscord = () => discordText += " <-";
+
+				HoverableRect(discordText, discordTextPos, hoverDiscord, notHoverDiscord);
+				DrawText(discordText, discordTextPos, discordColor);
 			}
 
 			spriteBatch.End();
@@ -39208,12 +_,19 @@
 		private void PreDrawMenu(out Microsoft.Xna.Framework.Point screenSizeCache, out Microsoft.Xna.Framework.Point screenSizeCacheAfterScaling) {
 			float uiScaleWanted = _uiScaleWanted;
 			float num = (float)screenHeight / 900f;
+			float preScale = num;
 			if (num < 1f)
 				num = 1f;
 
 			if (SettingDontScaleMainMenuUp)
 				num = 1f;
 
+			if (CheatHandler.GetCheat<NoMainMenuUIScalingCheat>().isEnabled)
+				num = 1f;
+
+			if (MenuUI.CurrentState is UIManageCheats uiManageCheats && uiManageCheats.uiScaleOnCtor != num)
+				MenuUI.SetState(new UIManageCheats());
+
 			screenSizeCache = ScreenSize;
 			UIScale = num;
 			PlayerInput.SetZoom_UI();
@@ -39466,10 +_,10 @@
 			}
 
 			int num8 = 70;
-			if (num == 1)
+			//if (num == 1)
 				DrawSplash_LoadingFlower(Microsoft.Xna.Framework.Color.White);
-			else if (num2 > num)
-				DrawSplash_LoadingFlower(white);
+			//else if (num2 > num)
+			//	DrawSplash_LoadingFlower(white);
 
 			_splashFrameCount += 1f;
 			if (_splashFrameCount >= (float)num8)
@@ -39494,6 +_,11 @@
 			float rotation = 0f;
 			Vector2 origin = rectangle.Size() / 2f;
 			spriteBatch.Draw(value, position, rectangle, splashColor, rotation, origin, num, SpriteEffects.None, 0f);
+
+			position -= new Vector2(0f, 100f);
+			position.X -= FontAssets.DeathText.Value.MeasureString(CurrentLoadStage).X / 2f;
+			spriteBatch.DrawString(FontAssets.DeathText.Value, CurrentLoadStage, position,
+				splashColor);
 		}
 
 		private void DrawSplash_LoadingStar(Microsoft.Xna.Framework.Color splashColor) {
@@ -42818,6 +_,11 @@
 				}
 
 				spriteBatch.Draw(TextureAssets.MapIcon[num138].Value, new Vector2(num136, num137), new Microsoft.Xna.Framework.Rectangle(0, 0, TextureAssets.MapIcon[num138].Width(), TextureAssets.MapIcon[num138].Height()), new Microsoft.Xna.Framework.Color(num139, num139, num139, num139), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);
+
+				// Map teleportation cheat
+				if (CheatHandler.GetCheat<MapTeleportCheat>().isEnabled && PlayerInput.Triggers.JustPressed.MouseRight)
+					player[myPlayer].Teleport(new Vector2(Math.Min(Math.Max((Main.mapFullscreenPos.X + (float)(Main.mouseX - Main.screenWidth / 2) / Main.mapFullscreenScale) * 16f, 0f), (float)Main.maxTilesX * 16f - 64f), Math.Min(Math.Max((Main.mapFullscreenPos.Y + (float)(Main.mouseY - Main.screenHeight / 2) / Main.mapFullscreenScale) * 16f, 0f), (float)Main.maxTilesY * 16f - 64f)), TeleportationStyleID.DebugTeleport);
+
 				DrawCursor(DrawThickCursor());
 			}
 
@@ -47202,7 +_,7 @@
 			base.Draw(gameTime);
 			float val = (float)screenWidth / MinimumZoomComparerX;
 			float val2 = (float)screenHeight / MinimumZoomComparerY;
-			ForcedMinimumZoom = Math.Max(Math.Max(1f, val), val2);
+			ForcedMinimumZoom = Math.Max(Math.Max(1f, 1f), 1f);
 			GameViewMatrix.Effects = ((!gameMenu && player[myPlayer].gravDir != 1f) ? SpriteEffects.FlipVertically : SpriteEffects.None);
 			BackgroundViewMatrix.Effects = GameViewMatrix.Effects;
 			BackgroundViewMatrix.Zoom = new Vector2(ForcedMinimumZoom);
